#LyX 1.6.2 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Project Specification:
\begin_inset Newline newline
\end_inset

Presentation as a Dissemination Media Accessible on the Web
\end_layout

\begin_layout Author
Louis-Rémi Babé
\end_layout

\begin_layout Abstract
The number of online alternatives to Microsoft PowerPoint has been rapidly
 growing in the past three years thanks to the emergence of appropriate
 Web technologies.
 They add a large number of interesting features to their desktop counterpart
 such as collaboration and online lectures.
 However, neither the traditional desktop applications nor their online
 alternative succeed to produce presentations that would be accessible from
 all Internet users on a Web page.
 Moreover, the Graphical User Interface (GUI) of presentation software has
 not evolved for ten years, while innovative concepts of GUI (e.g.
 ZoomUI) rose.
\end_layout

\begin_layout Abstract
The aim of this project is to design a full featured Web application that
 could compete with other presentation software, but to implement only the
 parts allowing it to produce accessible presentations as well as the ones
 likely to result in an improved usability.
 The whole project will be released under an Open Source license to let
 anyone contribute to the further development of this application.
\end_layout

\begin_layout Abstract
In doing so, the accessibility of current Web-enabled presentation will
 be evaluated, the solutions for cross-browser vector drawing and graphical
 animations will be compaired, the validity of ZoomUI for presentation software
 will be assessed and the way the community will contribute to this Open
 project will be observed.
\end_layout

\begin_layout Standard
A presentation is a very effective support for lecturers: using few bullet
 points, figures, colors and animations, a well designed presentation can
 help to clarify the structure of a talk, to highlight the important information
, to show the development of an idea in an highly visual visual way either
 for an informational or a persuasive purpose.
 A typical presentation consist of a set of 
\emph on
slides 
\emph default
such as presented in Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:A-typical-presentation"

\end_inset

.
\end_layout

\begin_layout Standard
If this media is only a visual aid during a lecture, it is often their only
 written material and thus is of major importance for information dissemination
 beyond the live presentation.
 In addition to the ability to simply send a presentation file by e-mail
 or a download link on a Web page, most presentation software now have associate
d platforms that allow to manage and share a library of such files in one
 place.
 But it is much harder to make a presentation accessible by embedding it
 directly in a Web page: so far, the only solutions that produces a truly
 accessible result are not meant for casual users and the presentations
 are often simplified by removing their animations.
\end_layout

\begin_layout Part
State of the art
\end_layout

\begin_layout Standard
Prior to defining this project and indicating what novelty it will bring,
 it is important to describe the Graphical User Interface (GUI) components,
 to list the features that are to be found in current desktop or online
 presentation software and to evaluate the accessibility of those solutions
 on the Web.
\end_layout

\begin_layout Quotation

\emph on
Graphical user interface: A type of user interface which allows people to
 interact with a computer through a metaphor of direct manipulation of graphical
 images and widgets in addition to text.

\emph default
 ― Wiktionary, the Free dictionary
\begin_inset CommandInset citation
LatexCommand cite
key "_graphical_????"

\end_inset


\end_layout

\begin_layout Quotation

\emph on
\begin_inset CommandInset label
LatexCommand label
name "quo:Accessibility-is-a"

\end_inset

Accessibility is a general term used to describe the degree to which a product
 (e.g., device, service, environment) is accessible by as many people as possible.

\emph default
 ― Wikipedia, the Free Encyclopedia
\begin_inset CommandInset citation
LatexCommand cite
key "_accessibility_????"

\end_inset


\end_layout

\begin_layout Standard
The purpose of the following section is not to compare the multitude of
 solutions available on the desktop platforms and online but rather to present
 what they usually have in common and what interesting innovations are integrate
d in some of them.
 The applications studied here range between the famous Microsoft PowerPoint
 and Apple's Keynote to the growing in popularity online challengers — Google
 Documents, SlideRocket —, without forgetting about some obscure but nonetheless
 interesting solutions such as S5 and Slidy.
\end_layout

\begin_layout Section
The composition of the graphical user interface
\end_layout

\begin_layout Standard
From the observation of the screenshots from the presentation software presented
 in Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:A-similar-GUI"

\end_inset

, it is possible to break down their GUI in three parts:
\end_layout

\begin_layout Paragraph
The editing panel
\end_layout

\begin_layout Standard
This is the main and most prominent GUI component: it contains only the
 slide that is currently being edited.
 Using a pointing device, the user can select the different elements of
 the slide, change their position, inclination or dimension and edit the
 content of the text elements.
\end_layout

\begin_layout Paragraph
The list of thumbnails
\end_layout

\begin_layout Standard
On the left-hand side, the user can scroll through a list of thumbnails
 of all slides.
 When a thumbnail is clicked, it appears in the editing panel.
 It is often possible to replace the thumbnails by alternative views of
 the slides such as an outline views that displays only their text content.
\end_layout

\begin_layout Paragraph
The toolbars
\end_layout

\begin_layout Standard
Although spread in different ways through the user interface, the toolbars
 are more generally to be found at the top of the screen and details are
 available either in sub-menus or the right-hand side.
\end_layout

\begin_layout Section
Common features
\end_layout

\begin_layout Standard
The following list of features are not necessarily present in all studied
 applications but they could be described as the minimal set of features
 that users are likely to expect from a presentation software.
\end_layout

\begin_layout Paragraph
Text
\end_layout

\begin_layout Standard
It is of course possible to add text to the slides, be it the presentation's
 title, a slide title, a list of bullet points or a table.
 Just like in a word processor, all font properties are modifiable: size,
 color, family, etc.
\end_layout

\begin_layout Paragraph
Vector shapes
\end_layout

\begin_layout Standard
Numerous predefined shapes can be inserted in a slide: rectangle, ellipses,
 lines, triangles, arrows, etc.
\end_layout

\begin_layout Paragraph
Illustrations
\end_layout

\begin_layout Standard
Since presentations are a visual support for lecturers, the possibility
 to insert illustrations such as images or charts is of paramount importance.
\end_layout

\begin_layout Paragraph
Layout choice
\end_layout

\begin_layout Standard
To make the composition of a slide easier, layouts offer a quick way to
 place the elements of a slide at predefined positions.
\end_layout

\begin_layout Paragraph
Master slide management
\end_layout

\begin_layout Standard
The 
\emph on
master slide
\emph default
 offers the possibility to set the default properties of a slide on one
 virtual slide.
 It can be seen as a visual style sheet.
\end_layout

\begin_layout Paragraph
Transitions
\end_layout

\begin_layout Standard
Transitions are animations applied to two slides that succeed to one other,
 for example one fades out while the other slides from the top of the screen.
\end_layout

\begin_layout Paragraph
Playback
\end_layout

\begin_layout Standard
Obviously, presentation have to be played at some point.
 The lecturer need to be able to display the slide in full-screen, one after
 the other.
\end_layout

\begin_layout Paragraph
Interoperability
\end_layout

\begin_layout Standard
Since the predominant file formats for presentations are the one produced
 by Microsoft PowerPoint, numerous application aim at being compatible with
 .ppt and .pptx file to make the user migration easier.
\end_layout

\begin_layout Section
Original and less common features
\end_layout

\begin_layout Standard
Some features are only to be found in the desktop software while others
 are only available in their Web counterparts.
 Some innovations are only present in one or two of the solutions studied.
\end_layout

\begin_layout Paragraph
Animations
\end_layout

\begin_layout Standard
If most applications offer the possibility to add transitions between slides,
 it is usually possible to animate the elements of a slide only on the desktop.
 To do so, once the appropriate toolbar (see Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-animation-toolbar"

\end_inset

) it is possible to select an element on the slide being edited, choose
 the type (entrance, emphasis, exit or motion path) and visual materialization
 of the effect.
 It is then possible to choose its trigger (
\emph on
on click, start after previous, start with previous
\emph default
) and to set different parameters of the animation (direction, speed).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:The-animation-toolbar"

\end_inset

The animation toolbar in PowerPoint 2007
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename illustration project specifications/PowerPoint animation.png
	width 71text%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename illustration project specifications/PowerPoint animation entrance.png
	width 35text%

\end_inset

 
\begin_inset Graphics
	filename illustration project specifications/PowerPoint animation path.png
	width 35text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Worldwide availability
\end_layout

\begin_layout Standard
Online presentation software have three advantages that are direct consequences
 of their 
\emph on
online nature
\emph default
:
\end_layout

\begin_layout Itemize
The documents created with them are instantly available everywhere, providing
 the user has a computer with an Internet connection.
 At home, at school or at their office, they have access to all the presentation
s they have created, without having to worry about the last place they forgot
 their USB key.
\end_layout

\begin_layout Itemize
Users do not have to worry either about backup.
 Web applications usually rely on redundant storage that are in all case
 much more reliable than a personal computer.
\end_layout

\begin_layout Itemize
The Web is supposed to be cross-platform: its content can be accessed by
 any user whatever the brand of their PC, the name of their Operating System
 (OS) or Web browser.
 Since all computers are now shipped with a browser and although there are
 still some browser-specific technologies (vector graphics for example),
 a well-thought-out Web application can be used by any user without requiring
 to install any additional software on the client's configuration.
\end_layout

\begin_layout Standard
It can be noted that the first two advantages have been balanced by the
 apparition of online platforms for some of the desktop applications (
\begin_inset CommandInset href
LatexCommand href
name "OfficeLive"
target "http://www.officelive.com/"

\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.officelive.com/
\end_layout

\end_inset

 for Microsoft PorwerPoint
\begin_inset CommandInset citation
LatexCommand cite
key "_store_????"

\end_inset

 and 
\begin_inset CommandInset href
LatexCommand href
name "iWork.com"
target "http://www.apple.com/iwork/"

\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.apple.com/iwork/
\end_layout

\end_inset

 for Apple's Keynote
\begin_inset CommandInset citation
LatexCommand cite
key "_apple_????"

\end_inset

)
\end_layout

\begin_layout Paragraph
Revision control
\end_layout

\begin_layout Standard
Revision control or 
\emph on
versioning
\emph default
 is a feature that allows to keep a track of the changes that occurred in
 a document and to restore it to a previous state.
 If a user deleted a large portion of the document inadvertently and saved
 its changes, it will still be possible, even in a different session, to
 revert those changes.
\end_layout

\begin_layout Paragraph
Collaboration
\end_layout

\begin_layout Standard
Collaboration is the ability for multiple user to edit a document concurrently.
 When one user modify the content of a textual element for example, the
 change is immediately reflected on the documents being displayed at the
 same time by other users.
\end_layout

\begin_layout Standard
Collaboration is available in certain Web applications such as Google Documents,
 Zoho Office and SlideRocket, but is also possible with Microsoft Office
 and OpenOffice.org through external services: 
\begin_inset CommandInset href
LatexCommand href
name "SharedView"
target "http://connect.microsoft.com/site/sitehome.aspx?SiteID=94"

\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
http://connect.microsoft.com/site/sitehome.aspx?SiteID=94
\end_layout

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "_welcome_????"

\end_inset

 (Microsoft Office only) and 
\begin_inset CommandInset href
LatexCommand href
name "Ulteo"
target "http://www.ulteo.com/"

\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.ulteo.com/
\end_layout

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "_open_????"

\end_inset

.
\end_layout

\begin_layout Paragraph
Online lectures
\end_layout

\begin_layout Standard
Online lectures are a mean to give a conference over the Internet: instead
 of having to gather in the same physical place, participants from all over
 the world are connected to a virtual room.
 The lecturer has control of the slides being displayed to the audience
 and a chat allows questions and answers to go back and forth.
\end_layout

\begin_layout Paragraph
Offline capabilities
\end_layout

\begin_layout Standard
The advantages of an online application should not mask the associated inconveni
ent: for an application that produces documents, being able to display or
 modify those documents only when an Internet connection is available can
 be issue.
 Despite the fact that Internet can now be accessed in trains, planes and
 subways, there are still many places and vehicles that are not yet covered.
 Most Web applications studied here allow to export the presentations to
 .ppt or .pdf to be viewed offline, but only Live Presentations allows to
 create and edit presentation without any Internet connection.
\end_layout

\begin_layout Paragraph
Embed on the Web
\end_layout

\begin_layout Standard
Certain applications or services allow to embed presentations directly in
 a Web page, using either an embedded Flash or Silverlight object, or even
 an iFrame (for HTML based presentations).
 Controls to navigate through the slides can be found under the presentation,
 just as for most embedded videos (see Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Example-of-presentations"

\end_inset

).
 Google Documents and 280slides, for example, allow to embed imported and
 authored presentations in an iFrame while 
\begin_inset CommandInset href
LatexCommand href
name "SlideShare"
target "http://www.slideshare.net/"

\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.slideshare.net/
\end_layout

\end_inset

 is specialized in converting .ppt and .pptx files into Flash objects to be
 embedded on any Web page.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Example-of-presentations"

\end_inset

Example of presentations embedded in a Web page: 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename illustration project specifications/embeded slideshare.png
	height 17theight%

\end_inset

 
\begin_inset Graphics
	filename illustration project specifications/embeded google presentation.png
	height 17theight%

\end_inset

 
\begin_inset Graphics
	filename illustration project specifications/embeded 280slides.png
	height 17theight%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Accessibility of presentations on the Web
\end_layout

\begin_layout Standard
Everybody does not access to the Web in the same way: although most people
 are connected with a desktop or laptop computer that has a normal screen,
 a mouse and a keyboard, more and more people are browsing the Web from
 mobile devices such as PDAs and 
\emph on
smart-phones
\emph default
, while people with disabilities are accessing Web content using different
 assistive technologies.
 There are only few presentation software that claim to produce accessible
 presentation for the Web, all of them requiring authors to have technical
 skills (being able to write HTML)
\begin_inset CommandInset citation
LatexCommand cite
key "_html_????,_s5:simple_????"

\end_inset

.
 Claiming that an application designed for a wider user base and producing
 accessible documents would be a true innovation requires to evaluate the
 actual accessibility of current solutions.
\end_layout

\begin_layout Standard
The Web ?C? Accessibility Guidelines (WCAG) offers an ?synonym:exhaustif?
 ?referential? to evaluate the accessibility of Web contents/applications.
 In the case of Web presentations, it should be noted that compliance to
 the WCAG depends on the accessibility of both the document and the piece
 software used to display it in the browser (the 
\emph on
player
\emph default
).
 Although it is relevant to evaluate the players, the document can only
 be accessible if the author is ?sensibilisés? to accessibility issues.
 For example the text alternatives have to be provided for visual content[ref
 guidleine WCAG] and only certain colour palettes can be used when considering
 ?daltonist? users[ref guidleine WCAG].
 Nevertheless it is still possible to evaluate the 
\series bold
potential 
\series default
accessibility of the documents ?à la lumière de? their underlying technolgy:
 does it guarentee that all users 
\series bold
can
\series default
 have access to the same information? And what about its penetration on
 mobile platforms?
\end_layout

\begin_layout Subsection
The nature of information in presentations
\end_layout

\begin_layout Standard
To ?saisir? the nature of information in this particular media, an hypotetical
 one can be studied (see Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:A-typical-presentation"

\end_inset

).
 The information appears to be primarily carried out by the text and illustratio
ns of the slides.
 But the ability to distinguish the different slides and to see the appearance
 of the text elements (their position, their different size, color and possible
 emphase) allows to identify the title of the presentation, its subtitle
 to differentiate the headings of the slide from the bullet points and to
 ?recognise/syn:identify? a quote and its author.
 If those visual properties were removed, the presentation would actually
 look as in Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:A-text-only-presentation"

\end_inset

.
\end_layout

\begin_layout Standard
The presentation appears much harder to understand when its structure and
 the semantic (i.e.
 the nature, the role) of its content is removed.
 There is more to a document's information than its text content and illustratio
ns.
 This fact is worth being noted because some visitors of the Web pages were
 the presentations are hosted do not have access to this visual information.
 Indeed, visually impaired persons are using screen readers which read aloud
 the page or alternatively ?clavier braille dynamique?.
 Those assistive technologies 
\emph on
read 
\emph default
the content of the page sequentially, but they can use keyboard shortcuts
 to access directly the section that interests them, for example by reading
 only the headings.
 Likewise, Web crawlers indexing the content for search engines are not
 taking its appearance into account.
\end_layout

\begin_layout Standard
It has been ?constaté? that three different technologies are being employed
 to publish presentations on the Internet, each of them not offering the
 same level of accessibility:
\end_layout

\begin_layout Itemize
HTML is being used in Google Presentation, 280Slides, S5, Slidy and is one
 of the export format available in Microsoft PowerPoint and OpenOffice.org
 Impress
\end_layout

\begin_layout Itemize
Flash is being used in SlideRocket, Live-Documents Presentations, SlideShare
 and is one of the export format available in OpenOffice.org Impress
\end_layout

\begin_layout Itemize
Silverlight is a possible conversion format from .pptx files using pptx2silverlig
ht or Save To Silverlight
\end_layout

\begin_layout Subsubsection
HTML
\end_layout

\begin_layout Standard
HTML is great
\end_layout

\begin_layout Standard
state that semantic is used by Web crawlers and that search engines return
 results were the query is found in headings first.
\end_layout

\begin_layout Subsection
Mobile penetration
\end_layout

\begin_layout Subsection
Testing the accessibility of existing presentation players
\end_layout

\begin_layout Standard
Explain protocol
\end_layout

\begin_layout Standard
Results are summarized in Table
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
zob
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="5">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
solution
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
content can be read
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
semantic and structure are retranscrits
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tab key functionnal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
heading key 
\emph default
functionnal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Part
Try something new
\end_layout

\begin_layout Standard
OBSERVATIONS
\end_layout

\begin_layout Itemize
It is not possible to compete in term of feature richness for a single developer
\end_layout

\begin_layout Itemize
Most presentation software have significant and original features to differentia
te from the rest, but there are only slight and insignificant variations
 in the GUI that actually has not evolved for ten years.
 On the other hand, new concept of GUI appeared and gain popularity in the
 meantime
\end_layout

\begin_layout Itemize
None of the authoring applications that have a GUI allows to create Presentation
s accessible on the Web and some of them even require additional plugins
 that restrain their universal availability.
 On the other hand, the HTML5 specification is being developed and it could
 bring some answers to these issues.
 LATER: the purpose of this project is not to make presentations accessible
 to a particular kind of population such as people with visual impairments,
 but rather to make sure that the content will be possible to adapt in the
 future to particular devices, and the best solution for that is to use
 HTML
\end_layout

\begin_layout Section
STEPS TO TAKE
\end_layout

\begin_layout Itemize
Design a Free and Open Source Software that would be appealing to the community
 of developers to help you implement an application that would be competitive
\end_layout

\begin_layout Itemize
Explore the validity of new concept of GUI such as Zoom UI, in presentation
 software
\end_layout

\begin_layout Itemize
Investigate the potential of HTML5 in terms of accessibility and plugin-less-nes
s
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "Project Specification"
options "plain"

\end_inset


\end_layout

\begin_layout Section
\start_of_appendix
\begin_inset CommandInset label
LatexCommand label
name "sec:A-typical-presentation"

\end_inset

A typical presentation
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename illustration project specifications/slide title.png
	height 31theight%

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename illustration project specifications/slide.png
	height 31theight%

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename illustration project specifications/slide2.png
	height 31theight%

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:A-text-only-presentation"

\end_inset

A text-only presentation
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename illustration project specifications/presentation blind.png
	height 75theight%

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:A-similar-GUI"

\end_inset

A similar GUI for different presentation software
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="center" valignment="middle" width="48text%">
<column alignment="center" valignment="middle" width="48text%">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename illustration project specifications/PowerPoint.png
	width 49text%

\end_inset


\end_layout

\begin_layout Plain Layout
Microsoft PowerPoint 2007
\begin_inset Newline newline
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename illustration project specifications/Keynote.png
	width 49text%

\end_inset


\end_layout

\begin_layout Plain Layout
Apple Keynote
\begin_inset Newline newline
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename illustration project specifications/OpenOffice.org Impress.png
	width 49text%

\end_inset


\end_layout

\begin_layout Plain Layout
OpenOffice.org Impress
\begin_inset Newline newline
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename illustration project specifications/Google Documents.png
	width 49text%

\end_inset


\end_layout

\begin_layout Plain Layout
Google Documents Presentation
\begin_inset Newline newline
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename illustration project specifications/SlideRocket.png
	width 49text%

\end_inset


\end_layout

\begin_layout Plain Layout
SlideRocket
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename illustration project specifications/Live-documents.png
	width 49text%

\end_inset


\end_layout

\begin_layout Plain Layout
Live-Documents Presentations
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_body
\end_document
